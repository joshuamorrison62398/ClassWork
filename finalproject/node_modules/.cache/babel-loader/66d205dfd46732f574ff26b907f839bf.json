{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joshu\\\\Desktop\\\\Perscholas\\\\Classwork\\\\todo-redux\\\\src\\\\components\\\\Todos.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addTodos } from \"../redux/reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapStateToProps = state => {\n  return {\n    todos: state\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    addTodo: obj => dispatch(addTodos(obj))\n  };\n};\nconst Todos = props => {\n  _s();\n  console.log(\"props\", props);\n  const [todo, setTodo] = useState(\"\");\n  const add = () => {\n    if (todo === \"\") {\n      alert(\"Input is Empty\");\n    } else {\n      props.addTodo({\n        id: Math.floor(Math.random() * 1000),\n        item: todo,\n        completed: false\n      });\n      setTodo(\"\");\n    }\n  };\n  const handleChange = e => {\n    setTodo(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addTodos\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => handleChange(e),\n      className: \"todo-input\",\n      value: todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-btn\",\n      onClick: () => add(),\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.todos.length > 0 && props.todos.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item.item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n//we can use connect method to connect this component with redux store\n_s(Todos, \"QLafgrWcgCBY6x1sYeV9eOohYiM=\");\n_c = Todos;\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);\nvar _c;\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"names":["React","useState","connect","addTodos","mapStateToProps","state","todos","mapDispatchToProps","dispatch","addTodo","obj","Todos","props","console","log","todo","setTodo","add","alert","id","Math","floor","random","item","completed","handleChange","e","target","value","length","map"],"sources":["C:/Users/joshu/Desktop/Perscholas/Classwork/todo-redux/src/components/Todos.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTodos } from \"../redux/reducer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todos: state,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addTodo: (obj) => dispatch(addTodos(obj)),\r\n  };\r\n};\r\n\r\nconst Todos = (props) => {\r\n  \r\n  console.log(\"props\",props);\r\n  \r\n  const [todo, setTodo] = useState(\"\");\r\n  \r\n    const add = () => {\r\n    if (todo === \"\") {\r\n      alert(\"Input is Empty\");\r\n    } else {\r\n      props.addTodo({\r\n        id: Math.floor(Math.random() * 1000),\r\n        item: todo,\r\n        completed: false,\r\n      });\r\n      setTodo(\"\");\r\n    }\r\n  };\r\n  \r\n\r\n  const handleChange = (e) => {\r\n    setTodo(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"addTodos\">\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => handleChange(e)}\r\n        className=\"todo-input\"\r\n        value={todo}\r\n      />\r\n\r\n      <button className=\"add-btn\"  onClick={() => add()}>\r\n        Add\r\n      </button>\r\n      <br />\r\n      \r\n      <ul>\r\n        {props.todos.length > 0 &&\r\n          props.todos.map((item) => {\r\n            return <li key={item.id}>{item.item}</li>;\r\n          })}\r\n      </ul>\r\n        \r\n    </div>\r\n  );\r\n};\r\n\r\n//we can use connect method to connect this component with redux store\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,QAAQ,QAAQ,kBAAkB;AAAC;AAE5C,MAAMC,eAAe,GAAIC,KAAK,IAAK;EACjC,OAAO;IACLC,KAAK,EAAED;EACT,CAAC;AACH,CAAC;AAED,MAAME,kBAAkB,GAAIC,QAAQ,IAAK;EACvC,OAAO;IACLC,OAAO,EAAGC,GAAG,IAAKF,QAAQ,CAACL,QAAQ,CAACO,GAAG,CAAC;EAC1C,CAAC;AACH,CAAC;AAED,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAAA;EAEvBC,OAAO,CAACC,GAAG,CAAC,OAAO,EAACF,KAAK,CAAC;EAE1B,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAElC,MAAMgB,GAAG,GAAG,MAAM;IAClB,IAAIF,IAAI,KAAK,EAAE,EAAE;MACfG,KAAK,CAAC,gBAAgB,CAAC;IACzB,CAAC,MAAM;MACLN,KAAK,CAACH,OAAO,CAAC;QACZU,EAAE,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,IAAI,CAAC;QACpCC,IAAI,EAAER,IAAI;QACVS,SAAS,EAAE;MACb,CAAC,CAAC;MACFR,OAAO,CAAC,EAAE,CAAC;IACb;EACF,CAAC;EAGD,MAAMS,YAAY,GAAIC,CAAC,IAAK;IAC1BV,OAAO,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,UAAU;IAAA,wBACvB;MACE,IAAI,EAAC,MAAM;MACX,QAAQ,EAAGF,CAAC,IAAKD,YAAY,CAACC,CAAC,CAAE;MACjC,SAAS,EAAC,YAAY;MACtB,KAAK,EAAEX;IAAK;MAAA;MAAA;MAAA;IAAA,QACZ,eAEF;MAAQ,SAAS,EAAC,SAAS;MAAE,OAAO,EAAE,MAAME,GAAG,EAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEzC,eACT;MAAA;MAAA;MAAA;IAAA,QAAM,eAEN;MAAA,UACGL,KAAK,CAACN,KAAK,CAACuB,MAAM,GAAG,CAAC,IACrBjB,KAAK,CAACN,KAAK,CAACwB,GAAG,CAAEP,IAAI,IAAK;QACxB,oBAAO;UAAA,UAAmBA,IAAI,CAACA;QAAI,GAAnBA,IAAI,CAACJ,EAAE;UAAA;UAAA;UAAA;QAAA,QAAkB;MAC3C,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACD;EAAA;IAAA;IAAA;IAAA;EAAA,QAED;AAEV,CAAC;;AAED;AAAA,GAjDMR,KAAK;AAAA,KAALA,KAAK;AAkDX,eAAeT,OAAO,CAACE,eAAe,EAAEG,kBAAkB,CAAC,CAACI,KAAK,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module"}